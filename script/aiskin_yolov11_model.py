# -*- coding: utf-8 -*-
"""AiSkin_YOLOv11_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P-z87SVIG2syWLKB-gTmVaJbeRvjJ6hk

# AiSkin Computer Vision Model

This is a notebook for training a YOLOv11 model on a custom dataset. The datasets are available in thenAiSkin.v11i.yolov11.zip file. To be able to rerun this notebook, the following are to be uploaded:

- AiSkin.v11i.yolov11.zip
- any image of skincare product (based in Malaysia) that you want to test for evaluation.
"""

!pip install ultralytics

# unzip datasets
!unzip "/content/AiSkin.v11i.yolov11.zip"

# delete directory
# !rm -rf /content/data.yaml

# import libraries
from ultralytics import YOLO
import cv2
import numpy as np
import matplotlib.pyplot as plt
import tensorboard

# load YOLOv11 model
model = YOLO('yolo11n.pt')

# train the model
results = model.train(data='/content/data.yaml', epochs=50)

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard
# %tensorboard --logdir "/content/runs/detect/train"

# Validate the model
metrics = model.val()  # no arguments needed, dataset and settings remembered
metrics.box.map  # map50-95
metrics.box.map50  # map50
metrics.box.map75  # map75
metrics.box.maps  # a list contains map50-95 of each category

# validation
trained_model = YOLO('/content/runs/detect/train/weights/best.pt')

# test with external data

#plot function
def pred_and_plot(image_path):
  result = trained_model.predict(image_path)
  img = result[0].plot() # return in numpy array, compatible with opencv
  img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
  plt.imshow(img)
  plt.xticks([])
  plt.yticks([])
  plt.show()

  #notice that without the cvtColor, the color is a bit off, because matplotlib expecting rgb

pred_and_plot('/content/the_raw_skincare_rbcc__rough_a_1726564039_caf7ef13_progressive.jpg')

"""correect but it doesnt detect the serum"""

pred_and_plot('/content/s-l400.png')

"""it doesnt detect anything at all"""

pred_and_plot('/content/The_Originote_Hyalucera_Moisturizer_-_Main.webp')

# export model
trained_model.export(format="onnx", dynamic=True)